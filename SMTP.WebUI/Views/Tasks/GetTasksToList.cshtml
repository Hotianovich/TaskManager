@model IEnumerable<SMTP.WebUI.Models.Entities_Models.ProjectTask>

@for (int i = 0; i < Model.Count(); i++)
{
    if (Model.ElementAt(i).StateTask.Equals(1))
    {
        <div class="row" id="get-task">
            <div class="my-row">
                <div class="col-md-1 my-left">
                    @Ajax.ActionLink(" ", "Success","Tasks", new { id = Model.ElementAt(i).TaskId }, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "ajax-replace" }, new { @class = "grey-circle", style = "background-image:url(/Content/Images/grey.svg); background-repeat: no-repeat; display:block; height:20px; width:20px;" })
                </div>
                <div class="col-md-7 my-center">
                    @Html.TextAreaFor(model => Model.ElementAt(i).TaskName, htmlAttributes: new { @class = "my-text-area", @readonly = "readonly", id = "text-task", wrap = "off", rows = "1" })
                </div>
                <div class="col-md-4 my-right-right">
                    <ul class="nav nav-pills my-pills">
                        <li>
                            <div class="div-date">
                                @if (Model.ElementAt(i).EndDate != null)
                                {
                                    DateTime date = (DateTime)Model.ElementAt(i).EndDate;
                                    @Html.Label(date.ToString("d MMM"), htmlAttributes: new { @class = "labl-red" });
                                }
                            </div>
                        </li>
                        <li class="li-project">
                            @Html.Action("GetProjectForList", "Project", new { id = Model.ElementAt(i).ProjectId })
                        </li>
                        <li class="many">
                            @if (Model.ElementAt(i).PriceTask.Equals(null))
                            {
                                <span class="glyphicon glyphicon-usd"></span>
                            }
                            else
                            {
                                @Html.Label(Model.ElementAt(i).PriceTask.ToString())
                            }
                        </li>
                        <li class="li-my-button">
                            <div class="my-button">
                                @Html.Action("EmployeeForList", "Employee", routeValues: new { id = Model.ElementAt(i).ExecuterId })
                            </div>
                        </li>
                        <li class="more" data-toggle="collapse" data-target="#subrow">
                            <button type="button" class="my-btn" data-toggle="collapse" data-target=@String.Format("#subrow{0}", i)></button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="row collapse" id=@String.Format("subrow{0}", i)>
            <div class="row">
                <div class="col-md-6">
                    <div class="top-top">
                        <h4 class="h-left">Описание</h4>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="top-top">
                        <h4 class="h-right">Комментарии</h4>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="my-left-area">
                        @Html.TextAreaFor(model => Model.ElementAt(i).Discription, htmlAttributes: new { @class = "my-area", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="my-right-area">
                        @Html.TextAreaFor(model => Model.ElementAt(i).Coments, htmlAttributes: new { @class = "my-area", @readonly = "readonly" })
                    </div>
                </div>
            </div>
            <div class="row gr-row">
                <div class="graw">
                    <div class="graw-row"></div>
                </div>
            </div>
        </div>
    }
}
